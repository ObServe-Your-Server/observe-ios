name: iOS starter workflow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build and Test default scheme using iPhone 14 Simulator
    runs-on: macos-14

    steps:
      - name: Set up Xcode 16
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '16'

      - name: Checkout
        uses: actions/checkout@v4

      - name: Set Default Scheme
        run: |
          scheme_list=$(xcodebuild -list -json | tr -d "\n")
          if [[ -z "$scheme_list" ]]; then
            echo "❌ Error: Could not retrieve scheme list. Possibly invalid project or Xcode mismatch."
            exit 1
          fi
          default=$(echo "$scheme_list" | ruby -e "require 'json'; puts JSON.parse(STDIN.gets)['project']['targets'][0]")
          echo "$default" > default
          echo "✅ Using default scheme: $default"

      - name: Build
        env:
          scheme: ${{ 'default' }}
        run: |
          device_name="iPhone 14"
          os_version="17.4"
          destination="platform=iOS Simulator,OS=$os_version,name=$device_name"

          if [ "$scheme" = "default" ]; then scheme=$(cat default); fi
          if ls -A | grep -iE '\.xcworkspace$' > /dev/null; then
            filetype_parameter="workspace"
            file_to_build=$(ls -A | grep -iE '\.xcworkspace$' | head -1)
          else
            filetype_parameter="project"
            file_to_build=$(ls -A | grep -iE '\.xcodeproj$' | head -1)
          fi

          file_to_build=$(echo "$file_to_build" | awk '{$1=$1;print}')
          echo "📦 Building $filetype_parameter: $file_to_build on $device_name ($os_version) with scheme: $scheme"

          xcodebuild build-for-testing \
            -scheme "$scheme" \
            -"$filetype_parameter" "$file_to_build" \
            -destination "$destination"

      - name: Test
        env:
          scheme: ${{ 'default' }}
        run: |
          device_name="iPhone 14"
          os_version="17.4"
          destination="platform=iOS Simulator,OS=$os_version,name=$device_name"

          if [ "$scheme" = "default" ]; then scheme=$(cat default); fi
          if ls -A | grep -iE '\.xcworkspace$' > /dev/null; then
            filetype_parameter="workspace"
            file_to_build=$(ls -A | grep -iE '\.xcworkspace$' | head -1)
          else
            filetype_parameter="project"
            file_to_build=$(ls -A | grep -iE '\.xcodeproj$' | head -1)
          fi

          file_to_build=$(echo "$file_to_build" | awk '{$1=$1;print}')
          echo "🧪 Testing $filetype_parameter: $file_to_build on $device_name ($os_version) with scheme: $scheme"

          xcodebuild test-without-building \
            -scheme "$scheme" \
            -"$filetype_parameter" "$file_to_build" \
            -destination "$destination"
